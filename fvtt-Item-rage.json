{
  "name": "Rage",
  "type": "feat",
  "img": "icons/creatures/abilities/mouth-teeth-human.webp",
  "data": {
    "description": {
      "value": "<p>In battle, you fight with primal ferocity. On your turn, you can enter a rage as a bonus action. While raging, you gain the following benefits if you aren't wearing heavy armor:</p>\n<ul>\n<li>\n<p>You have advantage on Strength checks and Strength saving throws.</p>\n</li>\n<li>\n<p>When you make a melee weapon attack using Strength, you gain a bonus to the damage roll that increases as you gain levels as a barbarian, as shown in the Rage Damage column of the Barbarian table.</p>\n</li>\n<li>\n<p>You have resistance to bludgeoning, piercing, and slashing damage.</p>\n</li>\n</ul>\n<p>If you are able to cast spells, you can't cast them or concentrate on them while raging. </p>\n<p>Your rage lasts for 1 minute. It ends early if you are knocked unconscious or if your turn ends and you haven't attacked a hostile creature since your last turn or taken damage since then. You can also end your rage on your turn as a bonus action. </p>\n<p>Once you have raged the number of times shown for your barbarian level in the Rages column in the table below, you must finish a long rest before you can rage again.</p>\n<p><em style=\"box-sizing:border-box;user-select:text;color:#191813;font-size:13px\">**Foundry note: Note the limited uses is set to the base default of 2. Please manually adjust as required.</em></p>\n<table style=\"width:286px;height:170px\" border=\"1\">\n<tbody>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\"><strong>Barbarian Level</strong></td>\n<td style=\"width:68px;height:17px\"><strong>Rages</strong></td>\n<td style=\"width:96px;height:17px\"><strong>Rage Damage</strong></td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">1st</td>\n<td style=\"width:68px;height:17px\">2</td>\n<td style=\"width:96px;height:17px\">+2</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">2nd</td>\n<td style=\"width:68px;height:17px\">2</td>\n<td style=\"width:96px;height:17px\">+2</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">3rd</td>\n<td style=\"width:68px;height:17px\">3</td>\n<td style=\"width:96px;height:17px\">+2</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">4th</td>\n<td style=\"width:68px;height:17px\">3</td>\n<td style=\"width:96px;height:17px\">+2</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">5th</td>\n<td style=\"width:68px;height:17px\">3</td>\n<td style=\"width:96px;height:17px\">+2</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">6th</td>\n<td style=\"width:68px;height:17px\">4</td>\n<td style=\"width:96px;height:17px\">+2</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">7th</td>\n<td style=\"width:68px;height:17px\">4</td>\n<td style=\"width:96px;height:17px\">+2</td>\n</tr>\n<tr>\n<td style=\"width:112px\">8th</td>\n<td style=\"width:68px\">4</td>\n<td style=\"width:96px\">+2</td>\n</tr>\n<tr>\n<td style=\"width:112px\">9th</td>\n<td style=\"width:68px\">4</td>\n<td style=\"width:96px\">+3</td>\n</tr>\n<tr>\n<td style=\"width:112px\">10th</td>\n<td style=\"width:68px\">4</td>\n<td style=\"width:96px\">+3</td>\n</tr>\n<tr>\n<td style=\"width:112px\">11th</td>\n<td style=\"width:68px\">4</td>\n<td style=\"width:96px\">+3</td>\n</tr>\n<tr>\n<td style=\"width:112px\">12th</td>\n<td style=\"width:68px\">5</td>\n<td style=\"width:96px\">+3</td>\n</tr>\n<tr>\n<td style=\"width:112px\">13th</td>\n<td style=\"width:68px\">5</td>\n<td style=\"width:96px\">+3</td>\n</tr>\n<tr>\n<td style=\"width:112px\">14th</td>\n<td style=\"width:68px\">5</td>\n<td style=\"width:96px\">+3</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">15th</td>\n<td style=\"width:68px;height:17px\">5</td>\n<td style=\"width:96px;height:17px\">+3</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">16th</td>\n<td style=\"width:68px;height:17px\">5</td>\n<td style=\"width:96px;height:17px\">+4</td>\n</tr>\n<tr>\n<td style=\"width:112px\">17th</td>\n<td style=\"width:68px\">6</td>\n<td style=\"width:96px\">+4</td>\n</tr>\n<tr>\n<td style=\"width:112px\">18th</td>\n<td style=\"width:68px\">6</td>\n<td style=\"width:96px\">+4</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">19th</td>\n<td style=\"width:68px;height:17px\">6</td>\n<td style=\"width:96px;height:17px\">+4</td>\n</tr>\n<tr style=\"height:17px\">\n<td style=\"width:112px;height:17px\">20th</td>\n<td style=\"width:68px;height:17px\">Unlimited</td>\n<td style=\"width:96px;height:17px\">+4</td>\n</tr>\n</tbody>\n</table>\n<p> </p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 48",
    "activation": {
      "type": "bonus",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "minute"
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": 4,
      "max": "4",
      "per": "lr",
      "type": "lr"
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": null
    },
    "damage": {
      "parts": [],
      "versatile": "",
      "value": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell",
      "value": ""
    },
    "requirements": "Barbarian 1",
    "recharge": {
      "value": null,
      "charged": false
    },
    "armor": {
      "value": 10
    },
    "hp": {
      "value": 0,
      "max": 0,
      "dt": null,
      "conditions": ""
    },
    "properties": {
      "amm": false,
      "fin": false,
      "fir": false,
      "foc": false,
      "hvy": false,
      "lgt": false,
      "lod": false,
      "rch": false,
      "rel": false,
      "ret": false,
      "spc": false,
      "thr": false,
      "two": false,
      "ver": false
    },
    "price": null,
    "attunement": null
  },
  "effects": [
    {
      "_id": "emkusfjy0j93fgjn",
      "changes": [
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "@item",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "rounds": 10
      },
      "icon": "icons/creatures/abilities/mouth-teeth-human.webp",
      "label": "Rage",
      "transfer": false,
      "flags": {
        "core": {
          "statusId": ""
        },
        "dae": {
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": false
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "tint": null,
      "selectedKey": "macro.itemMacro"
    }
  ],
  "flags": {
    "core": {
      "sourceId": "Item.C2lYHOGH2UpEifk7"
    },
    "exportSource": {
      "world": "Rime-of-the-Frost-Maiden",
      "system": "dnd5e",
      "coreVersion": "9.255",
      "systemVersion": "1.5.7"
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Rage",
          "type": "script",
          "author": "jM4h8qpyxwTpfNli",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "console.log(args)\n// throat clearing to get data on token\nconst lastArg = args[args.length - 1];\nlet tokenD;\nif (lastArg.tokenId) tokenD = canvas.tokens.get(lastArg.tokenId).actor;\nelse tokenD = game.actors.get(lastArg.actorId);\n// const target = canvas.tokens.get(lastArg.tokenId)\nlet item = args[1];  //passed by @item in the DAE field\nlet level = tokenD.items.getName(\"Barbarian\").data.data.levels;\nlet subClass = tokenD.items.getName(\"Barbarian\").data.data.subclass;\nlet name = tokenD.data.token.name;\n\n\n// const lastArg = args[args.length - 1];\n// const tokenD = canvas.tokens.get(lastArg.tokenId);\n// console.log(\"TokenD: \", tokenD)\n// let actorD = item.actor;\n// console.log(\"actorD: \", actorD);\n// let level = actorD.items.getName(\"Barbarian\").data.data.levels;\n// let subClass = actorD.items.getName(\"Barbarian\").data.data.subclass;\n// let name = tokenD.data.name;\nconsole.log(\"level: \", level);\nconsole.log(\"subClass: \", subClass);\nconsole.log(\"name: \", name);\nconsole.log(\"item: \", item);\n\nif (args[0] === \"on\") {\n\n// Mesages for when your barbarian gets angry. Feel free to customize.\nlet biteMsg = name + \" grows fierce, snarly teeth!\";\nlet clawMsg = name + \" grows sharp, slashing claws!\";\nlet tailMsg = name + \" grows a long, swinging tail!\";\nlet rageMsg = name + \" is ... RAGING!\";\n\n// Define weapon if no weapon will be chosen later.\nlet weapon = \"\";\n\nconst animation = async () => {\n  let effectScale = 0.25;\n  let effectColor = \"dark_red\"; //Change \"blue\" to \"dark_red\" for example if you have the patreon version of JB2A\n\n  new Sequence()\n    .effect()\n    .file(\"jb2a.markers.02.pink\")\n    .atLocation(tokenD)\n    .duration(3000)\n    .fadeIn(500)\n    .fadeOut(500)\n    .scale(0.75)\n    .waitUntilFinished(-500)\n\n    .effect()\n    .file(\"jb2a.impact.purple.1\")\n    .atLocation(tokenD)\n    .fadeIn(100)\n    .fadeOut(200)\n    .waitUntilFinished(-500)\n    .scale(0.75)\n\n    .effect()\n    .file(\"jb2a.impact.011.dark_purple\")\n    .atLocation(tokenD)\n    .fadeIn(500)\n    .fadeOut(500)\n    .scale(0.75)\n    .waitUntilFinished(-500)\n\n    // .effect()\n    // .attachTo(token) //Instead of atLocation(), we want the animation to be stuck to the token so it follows it around\n    // .file(`jb2a.energy_strands.complete.${effectColor}.01`)\n    // .belowTokens() //by default, the effect would be played above the tokens, we want this one to be played underneath so we can place the overlay above it\n    // .scale(effectScale)\n    // .persist() //This will make it continuously loop until dismissed by another bit of code we'll define underneath as the animationEnd() function.\n    // .name(`${item.actor.data.name}- Rage -${token.data._id}`) //We want a unique name that will make dismissing it later on easier.\n    // .effect()\n    // .attachTo(token)\n    // .file(`jb2a.energy_strands.overlay.${effectColor}.01`)\n    // .scale(effectScale)\n    // .persist()\n    // .fadeOut(500)\n    // .name(`${item.actor.data.name}- Rage -${token.data._id}`) //Named it the same as the previous effect so we can dismiss both effects at the same time\n    .play();\n};\n\nasync function animationEnd() {\n  Sequencer.EffectManager.endEffects({\n    name: `${item.actor.data.name}- Rage -${token.data._id}`,\n  }); //When we revert the mutation, we'll call this function to dismiss the animation\n}\n\nlet mCallbacks = {\n  post: animation, //Straight after the mutation, we want to execute this animation function as a callback\n};\n\nfunction condition(eventData) {\n  console.log(token.id, eventData.actorData.token);\n  console.log(token.id === eventData.actorData.token._id);\n  return token.id === eventData.actorData.token._id; //This condition makes sure we have the correct token to revert the mutation from\n}\n\n// Define the weapons from existing items\nlet bite = game.items.getName(\"Form of the Beast: Bite\").toObject();\nlet claws = game.items.getName(\"Form of the Beast: Claws\").toObject();\nlet tail = game.items.getName(\"Form of the Beast: Tail\").toObject();\nlet tailSwipe = game.items.getName(\"Form of the Beast: Tail Swipe\").toObject();\n\n// Check if correct subclass is in place\nif (subClass == \"Path of the Beast\") {\n  const buttonData = {\n    buttons: [\n      {\n        label:\n          \"<a title='Your mouth transforms into a bestial muzzle or great mandibles (your choice). It deals 1d8 piercing damage on a hit. Once on each of your turns when you damage a creature with this bite, you regain a number of hit points equal to your proficiency bonus, provided you have less than half your hit points when you hit.' alt='Your mouth transforms into a bestial muzzle or great mandibles (your choice). It deals 1d8 piercing damage on a hit. Once on each of your turns when you damage a creature with this bite, you regain a number of hit points equal to your proficiency bonus, provided you have less than half your hit points when you hit.'>Bite</a>\",\n        value: {\n          msg: biteMsg,\n          update: {\n            embedded: {\n              Item: {\n                [bite.name]: bite,\n              },\n            },\n          },\n        },\n      },\n      {\n        label:\n          \"<a title='Each of your hands transforms into a claw, which you can use as a weapon if it’s empty. It deals 1d6 slashing damage on a hit. Once on each of your turns when you attack with a claw using the Attack action, you can make one additional claw attack as part of the same action.' alt='Each of your hands transforms into a claw, which you can use as a weapon if it’s empty. It deals 1d6 slashing damage on a hit. Once on each of your turns when you attack with a claw using the Attack action, you can make one additional claw attack as part of the same action.'>Claws</a>\",\n        value: {\n          msg: clawMsg,\n          update: {\n            embedded: {\n              Item: {\n                [claws.name]: claws,\n              },\n            },\n          },\n        },\n      },\n      {\n        label:\n          \"<a title='You grow a lashing, spiny tail, which deals 1d8 piercing damage on a hit and has the reach property. If a creature you can see within 10 feet of you hits you with an attack roll, you can use your reaction to swipe your tail and roll a d8, applying a bonus to your AC equal to the number rolled, potentially causing the attack to miss you.' alt='You grow a lashing, spiny tail, which deals 1d8 piercing damage on a hit and has the reach property. If a creature you can see within 10 feet of you hits you with an attack roll, you can use your reaction to swipe your tail and roll a d8, applying a bonus to your AC equal to the number rolled, potentially causing the attack to miss you.'>Tail</a>\",\n        value: {\n          msg: tailMsg,\n          update: {\n            embedded: {\n              Item: {\n                [tail.name]: tail,\n                [tailSwipe.name]: tailSwipe,\n              },\n            },\n          },\n        },\n      },\n    ],\n    title: \"Which Form of the Beast?\",\n    content: `<p><img src=\"https://www.dndbeyond.com/avatars/thumbnails/13710/613/420/618/637402706646069197.png\" height=\"100\" style=\"float:left;outline:0;border:0;vertical-align:middle;margin:0px 10px\">When you enter your rage, you can transform, revealing the bestial power within you. Until the rage ends, you manifest a natural weapon. It counts as a simple melee weapon for you, and you add your Strength modifier to the attack and damage rolls when you attack with it, as normal.</p>\n    <p>You choose the weapon’s form each time you rage:</p>`,\n  };\n  weapon = await warpgate.buttonDialog(buttonData);\n}\n\n// Set universal Rage active effects\n// let rageAE = {\n//   embedded: {\n//     ActiveEffect: {\n//       Rage: {\n//         icon: item.img,\n//         changes: [\n//           {\n//             key: \"data.bonuses.mwak.damage\", //add the bonus to melee weapon attacks\n//             mode: 2,\n//             value: Math.ceil(\n//               Math.floor(level / (9 - Math.floor(level / 9)) + 2)\n//             ), //Some clever math to add the correct amount, depending on the barbarian level\n//             priority: 0,\n//           },\n//           {\n//             key: \"data.traits.dr.value\", //Add a resistance to Slashing damage\n//             value: \"slashing\",\n//             mode: 2,\n//             priority: 0,\n//           },\n//           {\n//             key: \"data.traits.dr.value\",\n//             value: \"bludgeoning\",\n//             mode: 2,\n//             priority: 0,\n//           },\n//           {\n//             key: \"data.traits.dr.value\",\n//             value: \"piercing\",\n//             mode: 2,\n//             priority: 0,\n//           },\n//           {\n//             key: \"flags.midi-qol.advantage.ability.save.str\",\n//             value: 1,\n//             mode: 0,\n//             priority: 0,\n//           },\n//           {\n//             key: \"flags.midi-qol.advantage.ability.check.str\",\n//             value: 1,\n//             mode: 0,\n//             priority: 0,\n//           },\n//         ],\n//         duration: { rounds: 10 },\n//       },\n//     },\n//   },\n// };\n\nconst options = {\n  comparisonKeys: { ActiveEffect: \"label\" },\n  name: \"Rage\", //Let's give the mutation a name so when we shift-click the revert button, we'll identify the right mutation to revert\n};\n\n// send fun message about weapons if available\nif (weapon.msg) {\n  ui.notifications.info(weapon.msg);\n} else {\n  ui.notifications.info(rageMsg);\n}\n\n// merge updates for spawning\n// let updates = mergeObject(rageAE, weapon.update);\nlet updates = weapon.update;\n\nawait warpgate.mutate(token.document, updates, mCallbacks, options); //Let's mutate the token document with some updates(stats changes and active effect on), callbacks(animation function) and options(name).\n// warpgate.event.trigger(warpgate.EVENT.REVERT, animationEnd, condition);\n}\n\nif (args[0] === \"off\") {\n     warpgate.revert(token.document, \"Rage\")\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "favtab": {
      "isFavorite": true
    },
    "spellTemplateManager": {
      "stmData": {
        "ignoreDuration": false,
        "spellTexture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true
      }
    },
    "siftoolkit": {
      "SIFData": {
        "ignoreDuration": false,
        "texture": "",
        "useTexture": false,
        "alpha": 50,
        "coneOrigin": 1,
        "loopAnimations": true,
        "playTemplateAudio": false,
        "playDamageAudio": false,
        "clip": "",
        "volume": 100
      }
    },
    "midi-qol": {
      "onUseMacroName": "",
      "effectActivation": false,
      "forceCEOff": true,
      "forceCEOn": true
    },
    "link-item-resource-5e": {
      "resource-link": "primary"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "autoanimations": {
      "version": 4,
      "killAnim": true,
      "animLevel": false,
      "options": {
        "ammo": false
      },
      "override": false,
      "sourceToken": {
        "enable": false
      },
      "targetToken": {
        "enable": false
      },
      "levels3d": {
        "type": ""
      },
      "macro": {
        "enable": false
      },
      "audio": {
        "a01": {
          "enable": false
        }
      }
    }
  }
}